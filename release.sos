#!/usr/bin/env sos-runner
#fileformat=SOS1.0

[global]
import glob

[setup]
depends: executable('pip')
bash:
	pip install git+https://github.com/jupyter/jupyter-book
	rm -rf jupyter-book && jupyter-book create jupyter-book
	rm -rf jupyter-book/content/*


[build_1]
depends: executable('rsync')
from sos.utils import env
bash: workdir = 'jupyter-book', expand = True
	rsync -auz --delete ../src/* ./content/
	cp ../cfg/toc.yml _data/
	cp ../cfg/_config.yml _config.yml
  	jupyter-book build . {'--overwrite' if env.config['sig_mode'] == 'force' else ''}

[build_2]
# a hack for https://github.com/jupyter/jupyter-book/issues/72
for x in glob.glob('src/*/[!_]*.ipynb'):
	x = path(f"jupyter-book/_build/{path(x).relative_to('src'):n}.md")
	if x.is_file():
		run(f'''sed -i 's/scope=col/scope="col"/g; s/scope=row/scope="row"/g' {x}''', stderr=False, stdout=False)

[build_3]
depends: executable('docker')
bash:  workdir = 'jupyter-book'
	docker run --rm --security-opt label:disable \
   		-v `pwd`:/srv/jekyll \
   		-p 4000:4000 \
   		-it -u 1000:1000 \
   		emdupre/jupyter-book bundle exec jekyll build 

[build_4]
depends: executable('rsync')
bash: 
	mkdir -p docs
	rsync -auz --delete jupyter-book/_site/* docs/
	rsync -auz --delete src/external docs/
	rm -rf docs/tmp*
	cp src/index.html docs/index.html
	echo "Deployed to the docs/ folder"

# see it at http://0.0.0.0:4000/dsc-wiki/overview.html
[serve]
depends: executable('docker')
bash:  workdir = 'jupyter-book'
	docker run --rm --security-opt label:disable \
   		-v `pwd`:/srv/jekyll \
   		-p 4000:4000 \
   		-it -u 1000:1000 \
   		emdupre/jupyter-book bundle exec jekyll serve --host 0.0.0.0

# This workflow can be ignored now
# because at this point juypter-book
# has now adopted this workflow and provides
# this image.
[docker_image]
docker_build: workdir = 'jupyter-book', tag = 'jekyll-book'
	FROM jekyll/jekyll:3.8.5
	COPY Gemfile .
	RUN apk --update add make gcc g++ libc-dev
	RUN bundler install

[default]
sos_run('build')
